---
// P√°gina de Cadastro
---

<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cadastro - Drexys</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px 0;
        }
        
        .register-container {
            background: white;
            padding: 2.5rem;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            width: 100%;
            max-width: 500px;
            margin: 20px;
        }
        
        .logo {
            text-align: center;
            margin-bottom: 2rem;
        }
        
        .logo h1 {
            color: #667eea;
            font-size: 2.5em;
            margin-bottom: 0.5rem;
        }
        
        .logo p {
            color: #666;
            font-size: 1.1em;
        }
        
        .form-row {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }
        
        .form-group {
            margin-bottom: 1.5rem;
            flex: 1;
        }
        
        .form-group.full-width {
            flex: 1 1 100%;
        }
        
        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #333;
        }
        
        input {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }
        
        input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        input.error {
            border-color: #dc3545;
        }
        
        .btn {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            margin-bottom: 1rem;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }
        
        .message {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            text-align: center;
            font-weight: 600;
        }
        
        .message.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .message.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .field-error {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }
        
        .link {
            text-align: center;
            margin-top: 1.5rem;
        }
        
        .link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s ease;
        }
        
        .link a:hover {
            color: #764ba2;
            text-decoration: underline;
        }
        
        .loading {
            display: none;
            text-align: center;
            margin: 1rem 0;
        }
        
        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .password-strength {
            margin-top: 0.5rem;
            font-size: 0.875rem;
        }
        
        .strength-weak { color: #dc3545; }
        .strength-medium { color: #ffc107; }
        .strength-strong { color: #28a745; }
    </style>
</head>
<body>
    <div class="register-container">
        <div class="logo">
            <h1>üìù Drexys</h1>
            <p>Crie sua conta gratuita</p>
        </div>
        
        <div id="message"></div>
        
        <form id="registerForm">
            <div class="form-row">
                <div class="form-group">
                    <label for="first_name">Nome:</label>
                    <input type="text" id="first_name" name="first_name" required placeholder="Seu nome">
                    <div class="field-error" id="first_name_error"></div>
                </div>
                
                <div class="form-group">
                    <label for="last_name">Sobrenome:</label>
                    <input type="text" id="last_name" name="last_name" required placeholder="Seu sobrenome">
                    <div class="field-error" id="last_name_error"></div>
                </div>
            </div>
            
            <div class="form-group full-width">
                <label for="username">Nome de usu√°rio:</label>
                <input type="text" id="username" name="username" required placeholder="Escolha um nome de usu√°rio">
                <div class="field-error" id="username_error"></div>
            </div>
            
            <div class="form-group full-width">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required placeholder="seu@email.com">
                <div class="field-error" id="email_error"></div>
            </div>
            
            <div class="form-group full-width">
                <label for="password">Senha:</label>
                <input type="password" id="password" name="password" required placeholder="M√≠nimo 6 caracteres" minlength="6">
                <div class="password-strength" id="password_strength"></div>
                <div class="field-error" id="password_error"></div>
            </div>
            
            <div class="form-group full-width">
                <label for="password_confirm">Confirmar senha:</label>
                <input type="password" id="password_confirm" name="password_confirm" required placeholder="Digite a senha novamente" minlength="6">
                <div class="field-error" id="password_confirm_error"></div>
            </div>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Criando sua conta...</p>
            </div>
            
            <button type="submit" class="btn" id="submitBtn">Criar Conta</button>
        </form>
        
        <div class="link">
            <a href="/auth/login">J√° tem conta? Fa√ßa login aqui</a>
        </div>
        
        <div class="link">
            <a href="/">‚Üê Voltar para o in√≠cio</a>
        </div>
    </div>

    <script type="module">
        import { authService } from '../../services/auth.js';
        
        const form = document.getElementById('registerForm');
        const submitBtn = document.getElementById('submitBtn');
        const loading = document.getElementById('loading');
        const messageDiv = document.getElementById('message');
        const passwordInput = document.getElementById('password');
        const passwordConfirmInput = document.getElementById('password_confirm');
        const passwordStrengthDiv = document.getElementById('password_strength');
        
        // Redirecionar se j√° estiver logado
        if (authService.isAuthenticated()) {
            window.location.href = '/dashboard';
        }
        
        function showMessage(message, type = 'error') {
            messageDiv.innerHTML = `<div class="message ${type}">${message}</div>`;
            setTimeout(() => {
                messageDiv.innerHTML = '';
            }, 7000);
        }
        
        function showFieldError(fieldName, message) {
            const errorDiv = document.getElementById(`${fieldName}_error`);
            const input = document.getElementById(fieldName);
            
            if (message) {
                errorDiv.textContent = message;
                errorDiv.style.display = 'block';
                input.classList.add('error');
            } else {
                errorDiv.style.display = 'none';
                input.classList.remove('error');
            }
        }
        
        function clearAllErrors() {
            const errorDivs = document.querySelectorAll('.field-error');
            const inputs = document.querySelectorAll('input');
            
            errorDivs.forEach(div => div.style.display = 'none');
            inputs.forEach(input => input.classList.remove('error'));
        }
        
        function checkPasswordStrength(password) {
            if (password.length === 0) {
                passwordStrengthDiv.textContent = '';
                return;
            }
            
            let strength = 0;
            if (password.length >= 6) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;
            
            let strengthText = '';
            let strengthClass = '';
            
            if (strength < 2) {
                strengthText = 'Senha fraca';
                strengthClass = 'strength-weak';
            } else if (strength < 4) {
                strengthText = 'Senha m√©dia';
                strengthClass = 'strength-medium';
            } else {
                strengthText = 'Senha forte';
                strengthClass = 'strength-strong';
            }
            
            passwordStrengthDiv.textContent = strengthText;
            passwordStrengthDiv.className = `password-strength ${strengthClass}`;
        }
        
        function validatePasswords() {
            const password = passwordInput.value;
            const passwordConfirm = passwordConfirmInput.value;
            
            if (passwordConfirm && password !== passwordConfirm) {
                showFieldError('password_confirm', 'As senhas n√£o coincidem');
                return false;
            } else {
                showFieldError('password_confirm', '');
                return true;
            }
        }
        
        function setLoading(isLoading) {
            if (isLoading) {
                loading.style.display = 'block';
                submitBtn.disabled = true;
                submitBtn.textContent = 'Criando conta...';
            } else {
                loading.style.display = 'none';
                submitBtn.disabled = false;
                submitBtn.textContent = 'Criar Conta';
            }
        }
        
        // Event listeners
        passwordInput.addEventListener('input', (e) => {
            checkPasswordStrength(e.target.value);
        });
        
        passwordConfirmInput.addEventListener('input', validatePasswords);
        passwordInput.addEventListener('input', validatePasswords);
        
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            clearAllErrors();
            
            // Valida√ß√£o no frontend
            if (!validatePasswords()) {
                return;
            }
            
            const formData = new FormData(e.target);
            const userData = {
                email: formData.get('email'),
                username: formData.get('username'),
                first_name: formData.get('first_name'),
                last_name: formData.get('last_name'),
                password: formData.get('password'),
                password_confirm: formData.get('password_confirm')
            };
            
            setLoading(true);
            
            try {
                const response = await authService.register(userData);
                showMessage('Conta criada com sucesso! Redirecionando...', 'success');
                
                setTimeout(() => {
                    window.location.href = '/dashboard';
                }, 2000);
                
            } catch (error) {
                console.error('Erro no cadastro:', error);
                
                if (error.errors) {
                    // Mostrar erros espec√≠ficos por campo
                    Object.keys(error.errors).forEach(field => {
                        const messages = error.errors[field];
                        if (messages && messages.length > 0) {
                            showFieldError(field, messages[0]);
                        }
                    });
                    
                    // Mostrar primeira mensagem geral
                    const firstError = Object.values(error.errors)[0];
                    if (firstError && firstError.length > 0) {
                        showMessage(firstError[0]);
                    }
                } else {
                    const errorMessage = error.message || 'Erro ao criar conta. Tente novamente.';
                    showMessage(errorMessage);
                }
            } finally {
                setLoading(false);
            }
        });
    </script>
</body>
</html>